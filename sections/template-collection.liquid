<div class="container mx-auto p-10 lg:p-20">
  {% paginate collection.products by section.settings.number_of_products_per_page %}
    <div class="lg:flex lg:justify-between lg:items-center mb-0 pb-10 md:pb-20 text-center lg:text-left">
      <h1 class="text-4xl font-bold mb-5">{{ collection.title }}</h1>
      <a href="{{ routes.collections_url }}" class="text-base text-anarvin hover:text-black underline underline-offset-8">Go back to collections</a>
    </div>
    <div class="text-base text-gray-500 mb-5">
      {% assign categories = collection.all_tags | sort %}
      <label for="category">Filter by Category:</label>
      <select
        class="border"
        id="category"
        name="category"
        onchange="location = this.value;">
        <option value="{{ collection.url }}">All Categories</option>
        {% for category in categories %}
          {% if current_tags contains category %}
            <option value="{{ collection.url }}/{{ category | handleize }}" selected>{{ category }}</option>
          {% else %}
            <option value="{{ collection.url }}/{{ category | handleize }}">{{ category }}</option>
          {% endif %}
        {% endfor %}
      </select>
    </div>
    <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
      {% for product in collection.products %}
        {% render 'product-card', product: product %}
      {% else %}
        <p>There are no products inside of this collection</p>
      {% endfor %}
    </div>
    <div>
      {% render 'pagination', paginate: paginate %}
    </div>
  {% endpaginate %}
</div>

{% schema %}
  {
    "name": "Template Collection",
    "settings": [
      {
        "type": "number",
        "id": "number_of_products_per_page",
        "default": 6,
        "label": "Number of products per page"
      }
    ]
  }
{% endschema %}
